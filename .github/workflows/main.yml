name: main

on:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: CLANG64, arch: x86_64, can-fail: false },
          { msystem: CLANG32, arch: i686, can-fail: false },
          { msystem: CLANGARM64, arch: aarch64, can-fail: true },
        ]
    name: ${{ matrix.msystem }}
    continue-on-error: ${{ matrix.can-fail }}
    steps:

      - uses: actions/checkout@v2
        with:
          path: temp
          fetch-depth: 0

      # to match the autobuild environment
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          install: git msys2-devel base-devel pactoys-git binutils clang lld mingw-w64-cross-clang mingw-w64-cross-clang-headers
          update: true

      - name: Add staging repo
        shell: msys2 {0}
        run: |
          sed -i '1s|^|[staging]\nServer = https://repo.msys2.org/staging/\nSigLevel = Never\n|' /etc/pacman.conf

      - name: Update using staging
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'

      - name: Move Checkout
        run: |
          Copy-Item -Path ".\temp" -Destination "C:\_" -Recurse

      - name: CI-Build
        shell: msys2 {0}
        run: |
          cd /C/_
          MINGW_ARCH=${{ matrix.msystem }} ./.ci/ci-build.sh

      - name: "Upload binaries"
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.msystem }}-packages
          path: C:/_/packages/*

      - name: "Upload sources"
        if:  ${{ matrix.msystem == 'CLANG64' }}
        uses: actions/upload-artifact@v2
        with:
          name: sources
          path: C:/_/sources/*
  publish:
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include: [
          { tagname: clang64, artifact: CLANG64-packages, can-fail: false },
          { tagname: clang32, artifact: CLANG32-packages, can-fail: false },
          { tagname: clangarm64, artifact: CLANGARM64-packages, can-fail: true },
          { tagname: sources, artifact: sources, can-fail: false },
        ]
    continue-on-error: ${{ matrix.can-fail }}
    if: ${{ github.event_name == 'workflow_dispatch' && startsWith(github.ref, 'refs/heads/') }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

      - name: Get branch name
        id: gitbranch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - uses: eine/tip@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.gitbranch.outputs.branch }}-${{ matrix.tagname }}
          rm: true
          files: ${{ matrix.artifact }}/*
